{"version":3,"sources":["webpack:///./src/views/p2pConfig/user/p2pSwitch.vue?7850","webpack:///src/views/p2pConfig/user/p2pSwitch.vue","webpack:///./src/views/p2pConfig/user/p2pSwitch.vue?8849","webpack:///./src/views/p2pConfig/user/p2pSwitch.vue","webpack:///./src/api/userDomain.js","webpack:///./src/api/user/p2pConfig.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","style","device","staticStyle","margin-bottom","attrs","title","$t","directives","name","rawName","value","expression","border","data","tableData","align","prop","label","formatter","formatterStatus","scopedSlots","_u","key","fn","scope","row","blocked","reviewing","_v","_s","_e","disable_p2p","active-color","inactive-color","on","change","blacklistChange","staticClass","layout","page-sizes","page-size","tableParam","pageSize","current-page","page","size-change","handleSizeChange","current-change","handleCurrentChange","staticRenderFns","p2pSwitchvue_type_script_lang_js_","loading","computed","Object","objectSpread","vuex_esm","mounted","fetchTableData","methods","_this","arguments","length","undefined","userDomain","isvalid","then","res","catch","err","console","log","handleP2PConfig","uid","id","_this2","p2pConfig","succeed","$message","message","type","forEach","item","disable","error","domain","user_p2pSwitchvue_type_script_lang_js_","component","componentNormalizer","options","__file","__webpack_exports__","fetchHostNum","_utils_request__WEBPACK_IMPORTED_MODULE_5__","url","Date","getTime","toFixed","method","fetchDomain","order","filters","concat","fetchDomainUnderReview","blockDomain","whiteDomain","reviewDomain","searchHost","host","fetchUserList","fetchUserDomain","queryMap","_utils_auth__WEBPACK_IMPORTED_MODULE_6__","query","bindDomain","checkDomain","domainID","deleteDomain","fetchAdminUser","__webpack_require__","d","p2pConfigWifiOnly","p2pConfigRatio","_utils_request__WEBPACK_IMPORTED_MODULE_0__","user_id","domain_id"],"mappings":"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","file":"js/chunk-6055.aacb0ec5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:(_vm.device === 'mobile' ? '' : 'padding: 30px 120px')},[_c('el-alert',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"title\":_vm.$t('p2pConfig.desc')}}),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"border\":\"\",\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"align\":\"center\",\"prop\":\"domain\",\"label\":_vm.$t('p2pConfig.name')}}),_c('el-table-column',{attrs:{\"align\":\"center\",\"formatter\":_vm.formatterStatus,\"label\":_vm.$t('p2pConfig.status')},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{style:(scope.row.blocked || scope.row.reviewing?'color: red':'')},[_vm._v(\"\\n          \"+_vm._s(_vm.formatterStatus(scope.row))+\"\\n        \")])]}}])}),_c('el-table-column',{attrs:{\"label\":_vm.$t('domainTable.operation'),\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(!scope.row.blocked && !scope.row.reviewing)?_c('el-switch',{attrs:{\"value\":!scope.row.disable_p2p,\"active-color\":\"#13ce66\",\"inactive-color\":\"#ff4949\"},on:{\"change\":function (value) { return _vm.blacklistChange(scope.row, value); }}}):_vm._e()]}}])})],1),_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"layout\":\"sizes, prev, pager, next\",\"page-sizes\":[10, 20, 50, 100],\"page-size\":_vm.tableParam.pageSize,\"current-page\":_vm.tableParam.page},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :style=\"device === 'mobile' ? '' : 'padding: 30px 120px'\">\n    <el-alert :title=\"$t('p2pConfig.desc')\" style=\"margin-bottom: 20px\" />\n    <el-table border :data=\"tableData\" v-loading=\"loading\">\n      <el-table-column align=\"center\" prop=\"domain\" :label=\"$t('p2pConfig.name')\"></el-table-column>\n      <el-table-column align=\"center\" :formatter=\"formatterStatus\" :label=\"$t('p2pConfig.status')\">\n        <template slot-scope=\"scope\">\n          <span :style=\"scope.row.blocked || scope.row.reviewing?'color: red':''\">\n            {{ formatterStatus(scope.row) }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('domainTable.operation')\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-switch v-if=\"!scope.row.blocked && !scope.row.reviewing\" :value=\"!scope.row.disable_p2p\" active-color=\"#13ce66\" inactive-color=\"#ff4949\" @change=\"value => blacklistChange(scope.row, value)\"> </el-switch>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"pagination-container\">\n      <el-pagination\n              layout=\"sizes, prev, pager, next\"\n              :page-sizes=\"[10, 20, 50, 100]\"\n              :page-size=\"tableParam.pageSize\"\n              :current-page=\"tableParam.page\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\">\n      </el-pagination>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { fetchUserDomain } from '@/api/userDomain'\nimport { p2pConfig } from '@/api/user/p2pConfig'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'p2pSwitch',\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      tableParam: {\n          page: 1,\n          pageSize: 10\n      },\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'device'\n    ])\n  },\n  mounted() {\n    this.fetchTableData()\n  },\n  methods: {\n    formatterStatus(row) {\n      if(row.blocked) {\n          return this.$t('common.illegal')\n      }\n      if(row.reviewing) {\n        return this.$t('common.reviewing')\n      }\n      return row.disable_p2p ? this.$t('p2pConfig.close') : this.$t('p2pConfig.open')\n    },\n    fetchTableData(page=this.tableParam.page, pageSize=this.tableParam.pageSize) {\n      this.loading = true\n      fetchUserDomain(page, pageSize, {isvalid: true}).then(res => {\n        if(res.data) {\n          this.tableData = res.data\n        }\n        this.loading = false\n      }).catch(err => {\n        this.loading = false\n        console.log(err)\n      })\n    },\n    // 检查是否可以关闭P2P\n    // checkCanCloseP2P() {\n    //   let openNum = 0\n    //   this.tableData.forEach(item => {\n    //     if(!item.blocked && !item.disable_p2p)\n    //       openNum += 1\n    //   })\n    //   return openNum >= 2 ? true : false\n    // },\n    handleP2PConfig(uid, id, data) {\n      this.loading = true\n      p2pConfig(uid, id, data)\n        .then(res => {\n          if(res.data.succeed) {\n            this.$message({\n              message: this.$t('p2pConfig.configSuccess'),\n              type: 'success'\n            })\n            this.tableData.forEach(item => {\n              if(item.id === id) {\n                item.disable_p2p = data.disable\n              }\n            })\n          } else {\n            this.$message.error(this.$t('p2pConfig.configFail'))\n          }\n          this.loading = false\n        })\n        .catch(err => {\n          this.loading = false\n          console.log(err)\n        })\n    },\n    blacklistChange(domain, value) {\n      const data = { disable: !value }\n      this.handleP2PConfig(domain.uid, domain.id, data)\n      // if(value) {\n      //   this.handleP2PConfig(domain.uid, domain.id, data)\n      // } else {\n      //   if(this.checkCanCloseP2P()) {\n      //     this.handleP2PConfig(domain.uid, domain.id, data)\n      //   } else {\n      //     this.$messageBox.alert(this.$t('p2pConfig.switchErr'), {\n      //       confirmButtonText: this.$t('common.ok')\n      //     })\n      //   }\n      // }\n    },\n    handleSizeChange(pageSize) {\n        this.tableParam.pageSize = pageSize\n        this.fetchTableData()\n    },\n    handleCurrentChange(page) {\n        this.tableParam.page = page\n        this.fetchTableData()\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./p2pSwitch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./p2pSwitch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./p2pSwitch.vue?vue&type=template&id=45211e28&\"\nimport script from \"./p2pSwitch.vue?vue&type=script&lang=js&\"\nexport * from \"./p2pSwitch.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"p2pSwitch.vue\"\nexport default component.exports","import request from '@/utils/request'\nimport { getID } from '@/utils/auth'\n\n// 获取活跃域名总数\nexport function fetchHostNum() {\n  return request({\n    url: `host/num?ts=${((new Date().getTime()) / 1000).toFixed() - 1800}`,\n    method: 'get'\n  })\n}\n\n// 获取域名列表\nexport function fetchDomain(page, pageSize, order, filters) {\n  let url = `host?page=${page}&page_size=${pageSize}&order=${order}`\n  filters.forEach(item => {\n    if(item.value)\n      url += `&${item.name}=${item.value}`\n  })\n  return request({\n    url,\n    method: 'get'\n  })\n}\n\n// 获取正在审核域名列表\nexport function fetchDomainUnderReview(page, pageSize) {\n    let url = `host/review?page=${page}&page_size=${pageSize}`\n    return request({\n        url,\n        method: 'get'\n    })\n}\n\n// 将域名拉黑或从黑名单移除\nexport function blockDomain(data) {\n  return request({\n    url: `/host/block`,\n    method: 'post',\n    data\n  })\n}\n\n// 将域名加入或从白名单移除\nexport function whiteDomain(data) {\n  return request({\n    url: `/host/whitelist`,\n    method: 'post',\n    data\n  })\n}\n\n// 将域名加入或从白名单移除\nexport function reviewDomain(data) {\n    return request({\n        url: `/host/review`,\n        method: 'post',\n        data\n    })\n}\n\n// 查找域名\nexport function searchHost(host) {\n  return request({\n    url: `host/search?keywords=${host}`,\n    method: 'get'\n  })\n}\n\n// 获取用户列表\nexport function fetchUserList(page, pageSize, order) {\n  return request({\n    url: `user?page=${page}&page_size=${pageSize}&order=${order}`,\n    method: 'get'\n  })\n}\n\n// 获取某用户的域名列表\nexport function fetchUserDomain(page, pageSize, queryMap) {\n  let url = `user/user_id/${getID()}/domain?page=${page}&page_size=${pageSize}`;\n\n  for (let query in queryMap) {\n      if (queryMap[query]) {\n          url = `${url}&${query}=1`\n      }\n  }\n  return request({\n    url,\n    method: 'get'\n  })\n}\n\n// 绑定域名\nexport function bindDomain(data) {\n  return request({\n    url: `user/user_id/${getID()}/domain`,\n    method: 'post',\n    data\n  })\n}\n\n// 认证域名\nexport function checkDomain(domainID) {\n  return request({\n    url: `user/user_id/${getID()}/domain/domain_id/${domainID}`,\n    method: 'post'\n  })\n}\n\n// 用户删除域名\nexport function deleteDomain(domainID) {\n  return request({\n    url: `user/user_id/${getID()}/domain/domain_id/${domainID}`,\n    method: 'delete'\n  })\n}\n\n// 管理员权限用户列表\nexport function fetchAdminUser() {\n  return request({\n    url: `user/admin`,\n    method: 'get'\n  })\n}","import request from '@/utils/request'\n\n// 用户配置网站p2p开关\nexport function p2pConfig(user_id, domain_id, data) {\n  return request({\n    url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control`,\n    method: 'post',\n    data\n  })\n}\n\n// 配置wifi only\nexport function p2pConfigWifiOnly(user_id, domain_id, data) {\n    return request({\n        url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control/wifi_only`,\n        method: 'post',\n        data\n    })\n}\n\n// 配置p2p激活比率\nexport function p2pConfigRatio(user_id, domain_id, data) {\n    return request({\n        url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control/ratio`,\n        method: 'post',\n        data\n    })\n}\n"],"sourceRoot":""}